spring:
  datasource:
    # DruidDataSource配置属性列表
    # https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
    druid:
      primary:
        name: springboot_demo
        url: jdbc:mysql://127.0.0.1:3306/springboot_demo?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false
        username: root
        password: 2222
        driver-class-name: com.mysql.jdbc.Driver
      secondary:
        name: springboot_demo2
        url: jdbc:mysql://127.0.0.1:3306/springboot_demo2?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false
        username: root
        password: 2222
        driver-class-name: com.mysql.jdbc.Driver

      # 连接池相关
      ## 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 1
      ## 最大连接池数量 默认8
      max-active: 20
      ## 最小连接池数量
      min-idle: 1
      ## 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，
      ## 并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 60000

      # preparedStatement 相关
      ## 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      ## 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      ## 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1

      # 测试连接相关
      ## 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
      ## 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: select 1
      ## 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 3
      ## 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认 true
      test-on-borrow: false
      ## 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      ## 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: on
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
      # keep-alive: false

      # Eviction 回收相关
      ## 有两个含义：
      ## 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      ## 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 默认1分钟
      time-between-eviction-runs-millis: 60000
      ## 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      max-evictable-idle-time-millis: 600000

  # 物理连接初始化的时候执行的sql
      connection-init-sqls: select 1

      # asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
      async-init: off

      # 当数据库抛出一些不可恢复的异常时，抛弃连接。根据dbType自动识别
      # exceptionSorter:

      # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
      # 监控统计用的filter:stat
      # 日志用的filter:log4j
      # 防御sql注入的filter:wall
      # 配置多个英文逗号分隔
      filter:
        stat:
          enabled: on
          log-slow-sql: on
          slow-sql-millis: 300
          merge-sql: on
        wall:
          enabled: on
        slf4j:
          enabled: on

      # 类型是List<com.alibaba.druid.filter.Filter>，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
      # proxyFilters

      # 监控配置
      # 配置下面参数用于启动监控页面，考虑安全问题，默认是关闭的，按需开启
      ## WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      ## https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_%E9%85%8D%E7%BD%AEWebStatFilter
      web-stat-filter:
        ## 是否开启 web [URI监控]
        enabled: on
        ## 需要监控的URI匹配 默认 /*
        url-pattern: '/*'
        ## 不需要监控的URI匹配 默认 *.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        ## session统计功能是否开启
        session-stat-enable: true
        ## session 统计最大数量
        session-stat-max-count: 500

        ## 配置principalSessionName，使得druid能够知道当前的session的用户是谁
        ## 根据需要，把其中的xxx.user修改为你user信息保存在session中的sessionName。
        ## 注意：如果你session中保存的是非string类型的对象，需要重载toString方法。
        principal-session-name: 'user'
        ## 如果你的user信息保存在cookie中，你可以配置 principalCookieName，使得 druid 知道当前的 user 是谁
        ## principal-cookie-name: 1
        ## 配置profileEnable能够监控单个url调用的sql列表。
        profile-enable: true

      ## StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        ## #是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
        enabled: on
        url-pattern: '/druid/*'
        ## 允许清空统计数据
        ## 在StatViewSerlvet输出的html页面中，有一个功能是Reset All，执行这个操作之后，会导致所有计数器清零，重新计数。你可以通过配置参数关闭它。
        reset-enable: false
        ## 登录 Druid 用户名
        login-username: 'admin'
        ## 登录 Druid 密码
        login-password: '    '
        ## StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数。比如：
        ## deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
        ## 如果allow没有配置或者为空，则允许所有访问
        allow: '127.0.0.1,10.101.12.174'
        ## deny: '127.0.0.2'


      # Druid提供了Spring和Jdbc的关联监控。
      # 配置 [Spring监控]
      # com.alibaba.druid.support.spring.stat.DruidStatInterceptor是一个标准的Spring MethodInterceptor。可以灵活进行AOP配置。
      # Spring AOP的配置文档： http://static.springsource.org/spring/docs/current/spring-framework-reference/html/aop-api.html
      # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: io.niufen.*


