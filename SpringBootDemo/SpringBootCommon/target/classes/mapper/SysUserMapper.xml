<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.niufen.springboot.common.module.sys.mapper.SysUserMapperByXml" >

    <!-- 单表操作通用字段 -->
    <sql id="baseColumnList">
        id,username,password,sex,phone,status,del_flag,
        create_user_id,create_user_name,create_time,
        update_user_id,update_user_name,update_time
    </sql>

    <!-- 单表操作通用字段 -->
    <sql id="javaColumnList">
        #{entity.id},#{entity.username},#{entity.password},#{entity.sex},#{entity.phone},#{entity.status},#{entity.delFlag},
        #{entity.createUserId},#{entity.createUserName},#{entity.createTime},
        #{entity.updateUserId},#{entity.updateUserName},#{entity.updateTime}
    </sql>

    <!-- 单表 -->
    <sql id="tableName">
        t_sys_user
    </sql>

    <!-- 单表 -->
    <sql id="fromTable">
        from <include refid="tableName"/>
    </sql>

    <!-- 单表查询条件，默认  create_time <![CDATA[ >= ]]> #startCreateTime#  AND  create_time <![CDATA[ <= ]]> #endCreateTime# -->
    <sql id="baseQueryParams">
        <where>
            <if test="params.id != null">
                and id = #{id}
            </if>
            <if test="params.username != null">
                and username = #{params.username}
            </if>
            <if test="params.password != null">
                and password = #{params.password}
            </if>
            <if test="params.sex != null">
            </if>
            <if test="params.phone != null">
                and phone = #{params.phone}
            </if>
            <if test="params.status != null">
                and status = #{params.status}
            </if>
            <if test="params.delFlag != null">
                and del_flag = #{params.delFlag}
            </if>
            <if test="params.createUserId != null">
                and create_user_id = #{params.createUserId}
            </if>
            <if test="params.createUserName != null">
                and create_user_name = #{params.createUserName}
            </if>
            <if test="params.updateUserId != null">
                and update_user_id = #{params.updateUserId}
            </if>
            <if test="params.updateUserName != null">
                and update_user_name = #{params.updateUserName}
            </if>
            <if test="params.startCreateTime != null">
                and create_time <![CDATA[ >= ]]> #{params.startCreateTime}
            </if>
            <if test="params.endCreateTime != null">
                and create_time <![CDATA[ <= ]]> #{params.endCreateTime}
            </if>
            <if test="params.startUpdateTime != null">
                and update_time <![CDATA[ >= ]]> #{params.startUpdateTime}
            </if>
            <if test="params.endUpdateTime != null">
                and update_time <![CDATA[ <= ]]> #{params.endUpdateTime}
            </if>
        </where>
    </sql>

    <sql id="setSql">
        <set>
            <if test="entity.username != null">username=#{entity.username},</if>
            <if test="entity.password != null">password=#{entity.password},</if>
            <if test="entity.sex != null">sex=#{entity.sex},</if>
            <if test="entity.phone != null">phone=#{entity.phone},</if>
            <if test="entity.status != null">status=#{entity.status},</if>
            <if test="entity.delFlag != null">del_flag=#{entity.delFlag},</if>
            <if test="entity.updateUserId != null">update_user_id=#{entity.updateUserId},</if>
            <if test="entity.updateUserName != null">update_user_name=#{entity.updateUserName},</if>
            <if test="entity.updateTime != null">update_time=#{entity.updateTime},</if>
        </set>
    </sql>

    <sql id="foreachIdList">
        <foreach item="id" index="index" collection="idList"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </sql>

    <sql id="pageSql">
        <if test="params.pageSortOrder != null">
            order by #{params.pageSortOrder}
        </if>
        <if test="params.pageLimit != null and params.pageStartIndex == null">
            limit #{params.pageLimit}
        </if>
        <if test="params.pageLimit != null and params.pageStartIndex != null">
            limit #{params.pageStartIndex},#{params.pageLimit}
        </if>
        <if test="params.pageLimit == null">
            limit 5000
        </if>
    </sql>

    <!-- 插入一条数据，ID由数据库自增，自动赋值到当前的 entity类 -->
    <insert id="insert" parameterType="sysUser" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into <include refid="tableName"/> (
            <include refid="baseColumnList"/>
        )
        values (
            <include refid="javaColumnList"/>
        )
    </insert>

    <!-- 根据 entity 属性删除数据 -->
    <delete id="deleteByMap" parameterType="map">
        delete
        <include refid="fromTable"/>
        <include refid="baseQueryParams" />
    </delete>

    <!-- 根据 ID 删除一条数据 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        delete <include refid="fromTable"/> where id = #{id}
    </delete>

    <!-- 根据 IdList 批量删除 -->
    <delete id="deleteBatchIds" parameterType="collection">
        delete <include refid="fromTable"/>
        where id in
        <include refid="foreachIdList"/>
    </delete>

    <!-- 根据 ID 更新一条数据 -->
    <update id="updateById" parameterType="sysUser">
        update <include refid="tableName"/>
        <include refid="setSql" />
        where id = #{entity.id}
    </update>

    <!-- 根据 ID 更新一条数据 -->
    <update id="update">
        update <include refid="tableName"/>
        <include refid="setSql" />
        <include refid="baseQueryParams"/>
    </update>

    <!-- 根据 ID 获取一个实体 -->
    <select id="getById" parameterType="long" resultType="sysUser">
        select
        <include refid="baseColumnList"/>
        <include refid="fromTable"/>
        where id = #{id}
    </select>

    <!-- 根据 Map params 查询参数，进行列表查询 -->
    <select id="getOne" parameterType="map" resultType="sysUser">
        SELECT
        <include refid="baseColumnList"/>
        <include refid="fromTable"/>
        <include refid="baseQueryParams"/>
        limit 1
    </select>

    <!-- 根据 Map params 查询参数，进行列表查询 -->
    <select id="listBatchIds" parameterType="collection" resultType="sysUser">
        SELECT
        <include refid="baseColumnList"/>
        <include refid="fromTable"/>
        where id in
        <include refid="foreachIdList"/>
    </select>


    <!-- 根据 Map params 查询参数，进行列表查询 -->
    <select id="listByParams" parameterType="map" resultType="sysUser">
        SELECT
        <include refid="baseColumnList"/>
        <include refid="fromTable"/>
        <include refid="baseQueryParams"/>
        <include refid="pageSql" />
    </select>

    <!-- 根据 Map params 查询参数，进行分页查询 -->
    <select id="countByParams" parameterType="java.util.Map" resultType="java.lang.Long">
        SELECT
        count(1)
        <include refid="fromTable"/>
        <include refid="baseQueryParams"/>
    </select>

</mapper>
